// Font
// This file holds the logic for our automatic font subsetting and optimization behaviour.

import { basename, copy, exec, extname, glob, mkdir, read, rm, write } from "./io.ts"
import { log, logIndented, yellow } from "./logging.ts"
import { unique } from "./util.ts"

let lastChars: string

export const generateFontSubsets = (text: string): boolean => {
  // Generated fonts and metadata are placed in the template folder
  const outPath = "content/static/fonts"
  const charFile = `${outPath}/chars.txt`

  // Load the existing chars from the most recent compile (if any)
  try {
    lastChars ??= read(charFile)
  } catch {
    // The chars file was missing — that's good, it means we're regenerating from scratch.
  }

  // Get every unique char in every page, sorted, as a string
  const everyChar = Array.from(text)
  const newChars = unique(everyChar).sort().join("").toWellFormed()

  // If the set of chars has changed, we need to regenerate our font subsets
  if (newChars !== lastChars) {
    lastChars = newChars

    log("Regenerating Fonts")

    // Make sure we have the necessary binary dependencies.
    // It's not a big deal if these are missing — see the README for more.
    try {
      exec("which -s hb-subset woff2_compress")
    } catch {
      logIndented(yellow("Binary deps missing — skipping font regeneration"))
      return false // signal failure
    }

    rm(outPath)
    mkdir(outPath)
    write(charFile, newChars)

    for (const file of glob("fonts/**.*")) {
      const ext = extname(file)
      const base = basename(file)
      const dest = `${outPath}/${base}.${ext}`

      if (["otf", "ttf"].includes(ext)) {
        exec(`hb-subset "${file}" --text-file="${charFile}" --layout-features=kern -o "${dest}"`)
        exec(`woff2_compress ${dest}`)
        rm(dest) // Remove the subset (but non-woff) file
      } else if (base != "_README") {
        // Non-font files, like a License, just need to be copied straight across and then we're done.
        // But we don't copy the _README, because we write a different readme down below.
        copy(file, dest)
        continue
      }
    }

    write(`${outPath}/_README.md`, "Hi! This folder is automatically deleted & regenerated by the build system. To add/remove fonts to the website, use the 'fonts' folder at the root of the repo.") // prettier-ignore
  }

  return true // signal success
}
